<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_DownloadGCode.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5VGyQ74zAAAAAElFTkSuQmCC
</value>
  </data>
</root>